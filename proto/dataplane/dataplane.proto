// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package lemming.dataplane;

import "proto/routing/routing.proto";

option go_package = "github.com/openconfig/lemming/proto/dataplane";

message OCInterface {
  string interface = 1;
  uint32 subinterface = 2;
}

message GUE {
  bytes src_ip = 1;
  bytes dst_ip = 2;
  uint32 dst_port = 3;
  bool is_v6 = 4;
}

message NextHop {
  OCInterface interface = 1;
  string next_hop_ip = 2;
  oneof encap {
    GUE gue = 3;
    routing.Headers headers = 5;
  }
}

message NextHopList {
  repeated NextHop hops = 1;
  repeated uint64 weights = 2;
}

message RoutePrefix {
  string cidr = 1;
  string network_instance = 2;
}

message Route {
  RoutePrefix prefix = 1;
  PacketAction action = 2;
  oneof hop {
    NextHopList next_hops = 3; // Implicitly create next hop, next hop groups.
    OCInterface interface = 4; // For connected routes.
  }
}

enum PortLocation {
  PORT_LOCATION_UNSPECIFIED = 0;
  PORT_LOCATION_INTERNAL = 1;
  PORT_LOCATION_EXTERNAL = 2;
  PORT_LOCATION_CPU = 3;
}

enum PacketAction {
  PACKET_ACTION_UNSPECIFIED = 0;
  PACKET_ACTION_DROP = 1;
  PACKET_ACTION_FORWARD = 2;
}